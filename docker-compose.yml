version: '3.8'

services:
    dev:
        container_name: project_dev
        image: nestjs-api-dev:1.0.0
        platform: linux/x86_64
        env_file:
            - ./.env
        build:
            context: .
            target: development
            dockerfile: ./Dockerfile
        platform: linux/x86_64
        command: npm run start:debug
        ports:
            - 3000:3000
            - 9229:9229
        networks:
            - nesjs-network
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped
        # depends_on:
        #     - db
    prod:
        container_name: project_prod
        image: nestjs-api-prod:1.0.0
        build:
            context: .
            target: production
            dockerfile: ./Dockerfile
        command: npm run start:prod
        ports:
            - 3000:3000
            - 9229:9229
        networks:
            - nesjs-network
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped
    db:
        container_name: project_mysql
        image: mysql/mysql-server:8.0
        restart: always
        environment:
            MYSQL_DATABASE: 'project'
            MYSQL_ROOT_PASSWORD: 'e3xs653c36w4t4chgcth'
            MYSQL_ROOT_HOST: '%'
        networks:
            - nesjs-network
        ports:
            - '3306:3306'  
    # adminer:
    #     image: adminer:latest
    #     environment:
    #         ADMINER_DEFAULT_SERVER: db
    #     ports:
    #         - 8080:8080
networks:
    nesjs-network: